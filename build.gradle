plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.5.0'
}

group = 'com.mycorp'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

avro {
	createSetters = true
	fieldVisibility = 'PRIVATE'
	enableDecimalLogicalType = true
}

sourceSets {
	main {
		java {
			srcDirs += ['src/main/java', 'src/main/avro']
			srcDirs += 'build/generated-main-avro-java'
		}
	}
}

compileJava.dependsOn(generateAvroJava)

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation("org.springframework.kafka:spring-kafka")
	implementation("io.confluent:kafka-avro-serializer:7.5.0")
	implementation("org.apache.avro:avro:1.11.3")
	implementation("org.apache.avro:avro-compiler:1.11.3")

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.postgresql:postgresql'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'


	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ['-Xlint:deprecation']
}

tasks.named('test') {
	useJUnitPlatform()
}
